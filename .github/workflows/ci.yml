name: Check app

on:
  push:
    branches: 
      - main
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./mobileapp
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: mobileapp/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run lint
      run: npm run lint

  test:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./mobileapp
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: mobileapp/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm run test -- --watchAll=false

  typecheck:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./mobileapp
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: mobileapp/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: TypeScript check
      run: npm run typecheck

  ios-build:
    needs: 
      - lint
      - test
      - typecheck
    runs-on: macos-latest
    
    defaults:
      run:
        working-directory: ./mobileapp
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: mobileapp/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        working-directory: ./mobileapp
    
    - name: Install CocoaPods
      run: |
        cd ios
        gem install cocoapods
        pod install
    
    - name: Build iOS app
      run: |
        cd ios
        xcodebuild -workspace MusicLooper.xcworkspace -scheme MusicLooper -configuration Release -destination 'generic/platform=iOS' -archivePath MusicLooper.xcarchive archive CODE_SIGNING_ALLOWED=NO